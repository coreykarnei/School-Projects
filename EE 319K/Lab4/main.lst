


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: Brent Atchison & Michael Darden
    3 00000000         ; Date Created: 8/25/2013 
    4 00000000         ; Last Modified: 3/4/2015 
    5 00000000         ; Section 1-2pm     TA: Jenny Chen
    6 00000000         ; Lab number: 4
    7 00000000         ; Brief description of the program
    8 00000000         ;   If the switch is presses, the LED toggles at 8 Hz
    9 00000000         ; Hardware connections
   10 00000000         ;  PE0 is switch input  (1 means pressed, 0 means not pr
                       essed)
   11 00000000         ;  PE1 is LED output (1 activates external LED on protob
                       oard) 
   12 00000000         ;Overall functionality of this system is the similar to 
                       Lab 3, with four changes:
   13 00000000         ;1-  activate the PLL to run at 80 MHz (12.5ns bus cycle
                        time) 
   14 00000000         ;2-  initialize SysTick with RELOAD 0x00FFFFFF 
   15 00000000         ;3-  add a heartbeat to PF2 that toggles every time thro
                       ugh loop 
   16 00000000         ;4-  add debugging dump of input, output, and time
   17 00000000         ; Operation
   18 00000000         ; 1) Make PE1 an output and make PE0 an input. 
   19 00000000         ; 2) The system starts with the LED on (make PE1 =1). 
   20 00000000         ;   3) Wait about 62 ms
   21 00000000         ;   4) If the switch is pressed (PE0 is 1), then toggle 
                       the LED once, else turn the LED on. 
   22 00000000         ;   5) Steps 3 and 4 are repeated over and over
   23 00000000         
   24 00000000 40024004 
                       SWITCH  EQU              0x40024004  ;PE0
   25 00000000 40024008 
                       LED     EQU              0x40024008  ;PE1
   26 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   27 00000000 00000010 
                       SYSCTL_RCGC2_GPIOE
                               EQU              0x00000010  ; port E Clock Gati
                                                            ng Control
   28 00000000 00000020 
                       SYSCTL_RCGC2_GPIOF
                               EQU              0x00000020  ; port F Clock Gati
                                                            ng Control
   29 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   30 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   31 00000000 40024420 
                       GPIO_PORTE_AFSEL_R
                               EQU              0x40024420
   32 00000000 40024510 
                       GPIO_PORTE_PUR_R
                               EQU              0x40024510
   33 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C



ARM Macro Assembler    Page 2 


   34 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   35 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   36 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   37 00000000 40025420 
                       GPIO_PORTF_AFSEL_R
                               EQU              0x40025420
   38 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   39 00000000         
   40 00000000         
   41 00000000                 AREA             DATA, ALIGN=2
   42 00000000 00000032 
                       SIZE    EQU              50
   43 00000000         ;You MUST use these two buffers and two variables
   44 00000000         ;You MUST not change their names
   45 00000000 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    DataBuffer
                               SPACE            SIZE*4
   46 000000C8 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00    TimeBuffer
                               SPACE            SIZE*4
   47 00000190 00 00 00 
              00       DataPt  SPACE            4
   48 00000194 00 00 00 
              00       TimePt  SPACE            4
   49 00000198         ;These names MUST be exported
   50 00000198                 EXPORT           DataBuffer
   51 00000198                 EXPORT           TimeBuffer
   52 00000198                 EXPORT           DataPt
   53 00000198                 EXPORT           TimePt
   54 00000198                 IMPORT           SysTick_Init
   55 00000198         
   56 00000198                 ALIGN
   57 00000198                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   58 00000000                 THUMB
   59 00000000                 EXPORT           Start
   60 00000000                 IMPORT           TExaS_Init
   61 00000000         
   62 00000000         



ARM Macro Assembler    Page 5 


   63 00000000 F7FF FFFE 
                       Start   BL               TExaS_Init  ; running at 80 MHz
                                                            , scope voltmeter o
                                                            n PD3
   64 00000004         ; initialize Port E
   65 00000004 494F            LDR              R1, =SYSCTL_RCGCGPIO_R
   66 00000006 6808            LDR              R0, [R1]
   67 00000008 F040 0030       ORR              R0, R0, #0x00000030 
                                                            ;port E and F
   68 0000000C 6008            STR              R0, [R1]
   69 0000000E BF00            NOP
   70 00000010 BF00            NOP
   71 00000012 494D            LDR              R1, =GPIO_PORTE_DIR_R
   72 00000014 6808            LDR              R0, [R1]
   73 00000016 F040 0002       ORR              R0, R0, #0x00000002
   74 0000001A F020 0001       AND              R0, R0, #0xFFFFFFFE
   75 0000001E 6008            STR              R0, [R1]
   76 00000020 494A            LDR              R1, =GPIO_PORTE_AFSEL_R
   77 00000022 6808            LDR              R0, [R1]
   78 00000024 F020 0003       AND              R0, R0, #0xFFFFFFFC
   79 00000028 6008            STR              R0, [R1]
   80 0000002A 4949            LDR              R1, =GPIO_PORTE_DEN_R
   81 0000002C 6808            LDR              R0, [R1]
   82 0000002E F040 0003       ORR              R0, R0, #0x00000003
   83 00000032 6008            STR              R0, [R1]
   84 00000034         
   85 00000034 4947            LDR              R1, =GPIO_PORTE_DATA_R 
                                                            ;port E1 = output
   86 00000036 6808            LDR              R0, [R1]
   87 00000038 F040 0002       ORR              R0, R0, #0x00000002
   88 0000003C 6008            STR              R0, [R1]
   89 0000003E         ; initialize Port F
   90 0000003E 4946            LDR              R1, =GPIO_PORTF_DIR_R
   91 00000040 6808            LDR              R0, [R1]
   92 00000042 F040 0004       ORR              R0, R0, #0x00000004
   93 00000046 6008            STR              R0, [R1]
   94 00000048 4944            LDR              R1, =GPIO_PORTF_AFSEL_R
   95 0000004A 6808            LDR              R0, [R1]
   96 0000004C F020 0004       AND              R0, R0, #0xFFFFFFFB
   97 00000050 6008            STR              R0, [R1]
   98 00000052 4943            LDR              R1, =GPIO_PORTF_DEN_R
   99 00000054 6808            LDR              R0, [R1]
  100 00000056 F040 0004       ORR              R0, R0, #0x00000004
  101 0000005A 6008            STR              R0, [R1]
  102 0000005C         
  103 0000005C         ; initialize debugging dump
  104 0000005C F000 F833       BL               Debug_Init
  105 00000060         
  106 00000060 B662            CPSIE            I           ; TExaS voltmeter, 
                                                            scope runs on inter
                                                            rupts
  107 00000062 F000 F84A 
                       loop    BL               Debug_Capture
  108 00000066         ;heartbeat
  109 00000066 493F            LDR              R1, =GPIO_PORTF_DATA_R 
                                                            ;check PF2
  110 00000068 6808            LDR              R0, [R1]
  111 0000006A F000 0004       AND              R0, R0, #0x00000004 
                                                            ;mask for bit 2



ARM Macro Assembler    Page 6 


  112 0000006E 2800            CMP              R0, #0
  113 00000070 D004            BEQ              ToggleOnF   ;If off, toggle on
  114 00000072 6808            LDR              R0, [R1]
  115 00000074 F020 0004       AND              R0, R0, #0xFFFFFFFB
  116 00000078 6008            STR              R0, [R1]    ;toggle off
  117 0000007A E003            B                next
  118 0000007C         ToggleOnF
  119 0000007C 6808            LDR              R0, [R1]
  120 0000007E F040 0004       ORR              R0, R0, #0x00000004
  121 00000082 6008            STR              R0, [R1]    ;Toggle on
  122 00000084         next
  123 00000084         ; Delay
  124 00000084         ;input PE0 test output PE1
  125 00000084 F000 F81B       BL               delay       ;Jump to delay func
                                                            tion
  126 00000088         
  127 00000088 4932            LDR              R1, =GPIO_PORTE_DATA_R 
                                                            ;check PE0
  128 0000008A 6808            LDR              R0, [R1]
  129 0000008C F000 0001       AND              R0, R0, #0x00000001 
                                                            ;mask for bit 0
  130 00000090 2800            CMP              R0, #0
  131 00000092 D104            BNE              pressed
  132 00000094 6808            LDR              R0, [R1]    ;Turn on if not pre
                                                            ssed
  133 00000096 F040 0002       ORR              R0, R0, #0x00000002
  134 0000009A 6008            STR              R0, [R1]
  135 0000009C E7E1            B                loop
  136 0000009E         pressed
  137 0000009E 492D            LDR              R1, =GPIO_PORTE_DATA_R 
                                                            ;check PE1
  138 000000A0 6808            LDR              R0, [R1]
  139 000000A2 F000 0002       AND              R0, R0, #0x00000002 
                                                            ;mask for bit 1
  140 000000A6 2800            CMP              R0, #0
  141 000000A8 D004            BEQ              ToggleOnE   ;If off, toggle on
  142 000000AA 6808            LDR              R0, [R1]
  143 000000AC F020 0002       AND              R0, R0, #0xFFFFFFFD
  144 000000B0 6008            STR              R0, [R1]    ;toggle off
  145 000000B2 E7D6            B                loop
  146 000000B4         ToggleOnE
  147 000000B4 6808            LDR              R0, [R1]
  148 000000B6 F040 0002       ORR              R0, R0, #0x00000002
  149 000000BA 6008            STR              R0, [R1]    ;Toggle on
  150 000000BC E7D1            B                loop
  151 000000BE         ;---------subroutines--------- 
  152 000000BE         delay
  153 000000BE 482A            LDR              R0, =1240000 ; your input outpu
                                                            t delay 
  154 000000C0         wait
  155 000000C0 1E40            SUBS             R0, R0, #0X01
  156 000000C2 D1FD            BNE              wait
  157 000000C4 4770            BX               LR
  158 000000C6         
  159 000000C6         
  160 000000C6         ;------------Debug_Init------------
  161 000000C6         ; Initializes the debugging instrument
  162 000000C6         ; Input: none
  163 000000C6         ; Output: none



ARM Macro Assembler    Page 7 


  164 000000C6         ; Modifies: none
  165 000000C6         ; Note: push/pop an even number of registers so C compil
                       er is happy
  166 000000C6         Debug_Init
  167 000000C6 B51F            PUSH             {R0-R4,LR}
  168 000000C8 4828            LDR              R0, =DataBuffer
  169 000000CA 4929            LDR              R1, =DataPt ;Initialize data po
                                                            inter
  170 000000CC 6008            STR              R0, [R1]
  171 000000CE 4829            LDR              R0, =TimeBuffer
  172 000000D0 4A29            LDR              R2, =TimePt ;Initialize time po
                                                            inter
  173 000000D2 6010            STR              R0, [R2]
  174 000000D4         
  175 000000D4 F04F 30FF       LDR              R0, =0xFFFFFFFF
  176 000000D8 F04F 0332       LDR              R3, =50     ;Fill Array
  177 000000DC 6809            LDR              R1, [R1]    ;take pointer value
                                                            s
  178 000000DE 6812            LDR              R2, [R2]
  179 000000E0         FillBuffers
  180 000000E0 6008            STR              R0, [R1]
  181 000000E2 F101 0104       ADD              R1, R1, #4  ;step forward (does
                                                            n't change pointer)
                                                            
  182 000000E6 6010            STR              R0, [R2]
  183 000000E8 F102 0204       ADD              R2, R2, #4
  184 000000EC 3B01            SUBS             R3, #1
  185 000000EE D1F7            BNE              FillBuffers
  186 000000F0         ; init SysTick
  187 000000F0 F7FF FFFE       BL               SysTick_Init
  188 000000F4 E8BD 401F       POP              {R0-R4,LR}
  189 000000F8 4770            BX               LR
  190 000000FA         
  191 000000FA         ;------------Debug_Capture------------
  192 000000FA         ; Dump Port E and time into buffers
  193 000000FA         ; Input: none
  194 000000FA         ; Output: none
  195 000000FA         ; Modifies: none
  196 000000FA         ; Note: push/pop an even number of registers so C compil
                       er is happy
  197 000000FA         Debug_Capture
  198 000000FA         ;Check if buffers are full
  199 000000FA B40F            PUSH             {R0-R3}
  200 000000FC 481B            LDR              R0, =DataBuffer
  201 000000FE F100 00C8       ADD              R0, #200
  202 00000102 491B            LDR              R1, =DataPt
  203 00000104 6809            LDR              R1, [R1]
  204 00000106 4288            CMP              R0, R1
  205 00000108 D01A            BEQ              SkipCapture ;If DataPt is at en
                                                            d of array, return
  206 0000010A         ;Sub
  207 0000010A         ;Combine PE0 and PE1 into R0
  208 0000010A 4912            LDR              R1, =GPIO_PORTE_DATA_R ;
  209 0000010C 680A            LDR              R2, [R1]    ;Deal with PE0
  210 0000010E F002 0201       AND              R2, #0x00000001
  211 00000112 EA4F 1002       LSL              R0, R2, #4  ;Store PE0 in bit 4
                                                             of R0
  212 00000116 680A            LDR              R2, [R1]    ;Deal with PE1
  213 00000118 F002 0202       AND              R2, #0x00000002



ARM Macro Assembler    Page 8 


  214 0000011C EA4F 0252       LSR              R2, #1
  215 00000120 EA40 0002       ORR              R0, R2      ;Store PE1 in bit 0
                                                             of R0
  216 00000124         
  217 00000124 4A12            LDR              R2, =DataPt
  218 00000126 6811            LDR              R1, [R2]    ;Find Array element
                                                            
  219 00000128 6008            STR              R0, [R1]    ;Store data in arra
                                                            y
  220 0000012A F101 0104       ADD              R1, #4
  221 0000012E 6011            STR              R1, [R2]    ;Increment pointer
  222 00000130         
  223 00000130 4812            LDR              R0, =NVIC_ST_CURRENT_R
  224 00000132 6800            LDR              R0, [R0]    ;Get counter value
  225 00000134         
  226 00000134 4A10            LDR              R2, =TimePt
  227 00000136 6811            LDR              R1, [R2]    ;Find Array element
                                                            
  228 00000138 6008            STR              R0, [R1]    ;Store time in arra
                                                            y
  229 0000013A F101 0104       ADD              R1, #4
  230 0000013E 6011            STR              R1, [R2]    ;Increment pointer
  231 00000140         SkipCapture
  232 00000140 BC0F            POP              {R0-R3}
  233 00000142 4770            BX               LR
  234 00000144         
  235 00000144         
  236 00000144                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  237 00000144                 END                          ; end of file
              400FE608 
              40024400 
              40024420 
              4002451C 
              400243FC 
              40025400 
              40025420 
              4002551C 
              400253FC 
              0012EBC0 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\main.d
 -o.\main.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\In
c\Luminary --predefine="__EVAL SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000000

Symbol: DataBuffer
   Definitions
      At line 45 in file main.s
   Uses
      At line 50 in file main.s
      At line 168 in file main.s
      At line 200 in file main.s

DataPt 00000190

Symbol: DataPt
   Definitions
      At line 47 in file main.s
   Uses
      At line 52 in file main.s
      At line 169 in file main.s
      At line 202 in file main.s
      At line 217 in file main.s

TimeBuffer 000000C8

Symbol: TimeBuffer
   Definitions
      At line 46 in file main.s
   Uses
      At line 51 in file main.s
      At line 171 in file main.s

TimePt 00000194

Symbol: TimePt
   Definitions
      At line 48 in file main.s
   Uses
      At line 53 in file main.s
      At line 172 in file main.s
      At line 226 in file main.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 000000FA

Symbol: Debug_Capture
   Definitions
      At line 197 in file main.s
   Uses
      At line 107 in file main.s
Comment: Debug_Capture used once
Debug_Init 000000C6

Symbol: Debug_Init
   Definitions
      At line 166 in file main.s
   Uses
      At line 104 in file main.s
Comment: Debug_Init used once
FillBuffers 000000E0

Symbol: FillBuffers
   Definitions
      At line 179 in file main.s
   Uses
      At line 185 in file main.s
Comment: FillBuffers used once
SkipCapture 00000140

Symbol: SkipCapture
   Definitions
      At line 231 in file main.s
   Uses
      At line 205 in file main.s
Comment: SkipCapture used once
Start 00000000

Symbol: Start
   Definitions
      At line 63 in file main.s
   Uses
      At line 59 in file main.s
Comment: Start used once
ToggleOnE 000000B4

Symbol: ToggleOnE
   Definitions
      At line 146 in file main.s
   Uses
      At line 141 in file main.s
Comment: ToggleOnE used once
ToggleOnF 0000007C

Symbol: ToggleOnF



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 118 in file main.s
   Uses
      At line 113 in file main.s
Comment: ToggleOnF used once
delay 000000BE

Symbol: delay
   Definitions
      At line 152 in file main.s
   Uses
      At line 125 in file main.s
Comment: delay used once
loop 00000062

Symbol: loop
   Definitions
      At line 107 in file main.s
   Uses
      At line 135 in file main.s
      At line 145 in file main.s
      At line 150 in file main.s

next 00000084

Symbol: next
   Definitions
      At line 122 in file main.s
   Uses
      At line 117 in file main.s
Comment: next used once
pressed 0000009E

Symbol: pressed
   Definitions
      At line 136 in file main.s
   Uses
      At line 131 in file main.s
Comment: pressed used once
wait 000000C0

Symbol: wait
   Definitions
      At line 154 in file main.s
   Uses
      At line 156 in file main.s
Comment: wait used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTE_AFSEL_R 40024420

Symbol: GPIO_PORTE_AFSEL_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 76 in file main.s
Comment: GPIO_PORTE_AFSEL_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 29 in file main.s
   Uses
      At line 85 in file main.s
      At line 127 in file main.s
      At line 137 in file main.s
      At line 208 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 71 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTE_PUR_R 40024510

Symbol: GPIO_PORTE_PUR_R
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: GPIO_PORTE_PUR_R unused
GPIO_PORTF_AFSEL_R 40025420

Symbol: GPIO_PORTF_AFSEL_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 94 in file main.s
Comment: GPIO_PORTF_AFSEL_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 109 in file main.s
Comment: GPIO_PORTF_DATA_R used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTF_DEN_R 4002551C

Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 98 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 90 in file main.s
Comment: GPIO_PORTF_DIR_R used once
LED 40024008

Symbol: LED
   Definitions
      At line 25 in file main.s
   Uses
      None
Comment: LED unused
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 223 in file main.s
Comment: NVIC_ST_CURRENT_R used once
SIZE 00000032

Symbol: SIZE
   Definitions
      At line 42 in file main.s
   Uses
      At line 45 in file main.s
      At line 46 in file main.s

SWITCH 40024004

Symbol: SWITCH
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: SWITCH unused
SYSCTL_RCGC2_GPIOE 00000010

Symbol: SYSCTL_RCGC2_GPIOE
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOE unused
SYSCTL_RCGC2_GPIOF 00000020




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

Symbol: SYSCTL_RCGC2_GPIOF
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: SYSCTL_RCGC2_GPIOF unused
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 26 in file main.s
   Uses
      At line 65 in file main.s
Comment: SYSCTL_RCGCGPIO_R used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 187 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 60 in file main.s
   Uses
      At line 63 in file main.s
Comment: TExaS_Init used once
2 symbols
369 symbols in table
