


ARM Macro Assembler    Page 1 


    1 00000000         ; Print.s
    2 00000000         ; Student names: change this to your names or look very 
                       silly
    3 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    4 00000000         ; Runs on LM4F120 or TM4C123
    5 00000000         ; EE319K lab 7 device driver for any LCD
    6 00000000         ;
    7 00000000         ; As part of Lab 7, students need to implement these LCD
                       _OutDec and LCD_OutFix
    8 00000000         ; This driver assumes two low-level LCD functions
    9 00000000         ; ST7735_OutChar   outputs a single 8-bit ASCII characte
                       r
   10 00000000         ; ST7735_OutString outputs a null-terminated string 
   11 00000000         
   12 00000000                 IMPORT           ST7735_OutChar
   13 00000000                 IMPORT           ST7735_OutString
   14 00000000                 EXPORT           LCD_OutDec
   15 00000000                 EXPORT           LCD_OutFix
   16 00000000         
   17 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   18 00000000                 THUMB
   19 00000000         
   20 00000000         
   21 00000000         
   22 00000000                 IMPORT           ST7735_OutChar
   23 00000000                 IMPORT           ST7735_OutString
   24 00000000                 EXPORT           LCD_OutDec
   25 00000000                 EXPORT           LCD_OutFix
   26 00000000         
   27 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   28 00000000                 THUMB
   29 00000000         
   30 00000000         
   31 00000000         
   32 00000000         ;-----------------------LCD_OutDec----------------------
                       -
   33 00000000         ; Output a 32-bit number in unsigned decimal format
   34 00000000         ; Input: R0 (call by value) 32-bit unsigned number
   35 00000000         ; Output: none
   36 00000000         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   37 00000000         ;ASCII numbers are +#0x30
   38 00000000 FFFFFFF0 
                       Remainder
                               EQU              -16
   39 00000000 FFFFFFF4 
                       LinkReg EQU              -12
   40 00000000 FFFFFFFC 
                       StackFrame
                               EQU              -4
   41 00000000         LCD_OutDec
   42 00000000 46EC            MOV              R12, SP
   43 00000002 E92D 1001       PUSH             {R12, R0}   ; Store stack frame
                                                            , R0 is just filler
                                                            
   44 00000006         ; Modulus: R1=R0%10, R2=R0/10



ARM Macro Assembler    Page 2 


   45 00000006 F04F 010A       MOV              R1, #10
   46 0000000A FBB0 F2F1       UDIV             R2, R0, R1  ; R2 <- R0 / R1
   47 0000000E FB01 0112       MLS              R1, R1, R2, R0 ; R1 <- R0 - (R1
                                                             * R2 )
   48 00000012         ; Put remainder & LR in stack (remember to pop twice lat
                       er)
   49 00000012 B502            PUSH             {R1, LR}
   50 00000014         ; check for termination (R0/10=0)
   51 00000014 2A00            CMP              R2, #0
   52 00000016 D002            BEQ              terminate
   53 00000018         ; recursion progression
   54 00000018 4610            MOV              R0, R2
   55 0000001A F7FF FFFE       BL               LCD_OutDec
   56 0000001E         ; Terminating case
   57 0000001E         terminate
   58 0000001E F8DD C00C       LDR              R12, [SP, #12]
   59 00000022 F85C 0C10       LDR              R0, [R12, #Remainder]
   60 00000026 F100 0030       ADD              R0, R0, #0x30 
                                                            ; Convert to ASCII
   61 0000002A F7FF FFFE       BL               ST7735_OutChar ; Print R0 ascii
                                                             value
   62 0000002E F85C EC0C       LDR              LR, [R12, #LinkReg]
   63 00000032 B004            ADD              SP, #16     ; Clear local varia
                                                            bles
   64 00000034 4770            BX               LR
   65 00000036         ;* * * * * * * * End of LCD_OutDec * * * * * * * *
   66 00000036         
   67 00000036         ; -----------------------LCD _OutFix--------------------
                       --
   68 00000036         ; Output characters to LCD display in fixed-point format
                       
   69 00000036         ; unsigned decimal, resolution 0.001, range 0.000 to 9.9
                       99
   70 00000036         ; Inputs:  R0 is an unsigned 32-bit number
   71 00000036         ; Outputs: none
   72 00000036         ; E.g., R0=0,    then output "0.000 "
   73 00000036         ;       R0=3,    then output "0.003 "
   74 00000036         ;       R0=89,   then output "0.089 "
   75 00000036         ;       R0=123,  then output "0.123 "
   76 00000036         ;       R0=9999, then output "9.999 "
   77 00000036         ;       R0>9999, then output "*.*** "
   78 00000036         ; Invariables: This function must not permanently modify
                        registers R4 to R11
   79 00000036         LCD_OutFix
   80 00000036 E92D 4830       PUSH             {R4-R5, R11, LR}
   81 0000003A         ; Check for special cases
   82 0000003A F242 710F       LDR              R1, =9999
   83 0000003E 4281            CMP              R1, R0      ; # > 9.999
   84 00000040 D42C            BMI              Star
   85 00000042 2800            CMP              R0, #0      ; edge case
   86 00000044 D42A            BMI              Star
   87 00000046         
   88 00000046         ; Arrange decimal digits in order on stack 
   89 00000046 F04F 010A       MOV              R1, #10     ; R0 = number to di
                                                            vide, R1 = 10, (sta
                                                            rt with 5279)
   90 0000004A F04F 0400       MOV              R4, #0      ; Push-count
   91 0000004E         Push_loop
   92 0000004E FBB0 F2F1       UDIV             R2, R0, R1  ; R2 <- R2 / R1   #



ARM Macro Assembler    Page 3 


                                                             / by 10
   93 00000052 FB02 0311       MLS              R3, R2, R1, R0 ; R3 <- R0 - (R1
                                                             * R2 ) Remainder
   94 00000056 E92D 0808       PUSH             {R3, R11}   ; Push remainder
   95 0000005A 4610            MOV              R0, R2
   96 0000005C F104 0401       ADD              R4, #1
   97 00000060 2A00            CMP              R2, #0      ; Check terminating
                                                             case
   98 00000062 D1F4            BNE              Push_loop
   99 00000064         
  100 00000064         ; Print/Pop sequence
  101 00000064 F04F 0504       MOV              R5, #4      ; Chars-remaining
  102 00000068         Print
  103 00000068 2D00            CMP              R5, #0      ; Check end case
  104 0000006A D02B            BEQ              Exit
  105 0000006C 2D03            CMP              R5, #3      ; Check '.' case
  106 0000006E D103            BNE              Next
  107 00000070 F04F 002E       MOV              R0, #46
  108 00000074 F7FF FFFE       BL               ST7735_OutChar
  109 00000078         Next
  110 00000078 42AC            CMP              R4, R5      ; If Chars-remainin
                                                            g > Push-count, pri
                                                            nt a leading '0'
  111 0000007A D408            BMI              Leading_zero
  112 0000007C         Digit                                ; Print next digit
  113 0000007C E8BD 0801       POP              {R0, R11}
  114 00000080 F100 0030       ADD              R0, #0x30
  115 00000084 F7FF FFFE       BL               ST7735_OutChar
  116 00000088 F1A5 0501       SUB              R5, #1
  117 0000008C E7EC            B                Print
  118 0000008E         Leading_zero                         ; Print leading '0'
                                                            
  119 0000008E F04F 0030       MOV              R0, #0x30
  120 00000092 F7FF FFFE       BL               ST7735_OutChar
  121 00000096 F1A5 0501       SUB              R5, #1
  122 0000009A E7E5            B                Print
  123 0000009C         
  124 0000009C         ; '*' Sequence
  125 0000009C         Star
  126 0000009C F04F 002A       MOV              R0, #42
  127 000000A0 F7FF FFFE       BL               ST7735_OutChar
  128 000000A4 F04F 002E       MOV              R0, #46
  129 000000A8 F7FF FFFE       BL               ST7735_OutChar
  130 000000AC F04F 002A       MOV              R0, #42
  131 000000B0 F7FF FFFE       BL               ST7735_OutChar
  132 000000B4 F04F 002A       MOV              R0, #42
  133 000000B8 F7FF FFFE       BL               ST7735_OutChar
  134 000000BC F04F 002A       MOV              R0, #42
  135 000000C0 F7FF FFFE       BL               ST7735_OutChar
  136 000000C4         
  137 000000C4         Exit
  138 000000C4 E8BD 4830       POP              {R4-R5, R11, LR}
  139 000000C8 4770            BX               LR
  140 000000CA         
  141 000000CA 00 00           ALIGN
  142 000000CC         ;* * * * * * * * End of LCD_OutFix * * * * * * * *
  143 000000CC         
  144 000000CC                 ALIGN                        ; make sure the end
                                                             of this section is



ARM Macro Assembler    Page 4 


                                                             aligned
  145 000000CC                 END                          ; end of file
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\print.
d -o.\print.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\print.lst Print.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 17 in file Print.s
   Uses
      None
Comment: .text unused
Digit 0000007C

Symbol: Digit
   Definitions
      At line 112 in file Print.s
   Uses
      None
Comment: Digit unused
Exit 000000C4

Symbol: Exit
   Definitions
      At line 137 in file Print.s
   Uses
      At line 104 in file Print.s
Comment: Exit used once
LCD_OutDec 00000000

Symbol: LCD_OutDec
   Definitions
      At line 41 in file Print.s
   Uses
      At line 14 in file Print.s
      At line 24 in file Print.s
      At line 55 in file Print.s

LCD_OutFix 00000036

Symbol: LCD_OutFix
   Definitions
      At line 79 in file Print.s
   Uses
      At line 15 in file Print.s
      At line 25 in file Print.s

Leading_zero 0000008E

Symbol: Leading_zero
   Definitions
      At line 118 in file Print.s
   Uses
      At line 111 in file Print.s
Comment: Leading_zero used once
Next 00000078

Symbol: Next
   Definitions
      At line 109 in file Print.s
   Uses
      At line 106 in file Print.s
Comment: Next used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Print 00000068

Symbol: Print
   Definitions
      At line 102 in file Print.s
   Uses
      At line 117 in file Print.s
      At line 122 in file Print.s

Push_loop 0000004E

Symbol: Push_loop
   Definitions
      At line 91 in file Print.s
   Uses
      At line 98 in file Print.s
Comment: Push_loop used once
Star 0000009C

Symbol: Star
   Definitions
      At line 125 in file Print.s
   Uses
      At line 84 in file Print.s
      At line 86 in file Print.s

terminate 0000001E

Symbol: terminate
   Definitions
      At line 57 in file Print.s
   Uses
      At line 52 in file Print.s
Comment: terminate used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

LinkReg FFFFFFF4

Symbol: LinkReg
   Definitions
      At line 39 in file Print.s
   Uses
      At line 62 in file Print.s
Comment: LinkReg used once
Remainder FFFFFFF0

Symbol: Remainder
   Definitions
      At line 38 in file Print.s
   Uses
      At line 59 in file Print.s
Comment: Remainder used once
StackFrame FFFFFFFC

Symbol: StackFrame
   Definitions
      At line 40 in file Print.s
   Uses
      None
Comment: StackFrame unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

ST7735_OutChar 00000000

Symbol: ST7735_OutChar
   Definitions
      At line 12 in file Print.s
      At line 22 in file Print.s
   Uses
      At line 61 in file Print.s
      At line 108 in file Print.s
      At line 115 in file Print.s
      At line 120 in file Print.s
      At line 127 in file Print.s
      At line 129 in file Print.s
      At line 131 in file Print.s
      At line 133 in file Print.s
      At line 135 in file Print.s
Warning: ST7735_OutChar multiply defined
ST7735_OutString 00000000

Symbol: ST7735_OutString
   Definitions
      At line 13 in file Print.s
      At line 23 in file Print.s
   Uses
      None
Warning: ST7735_OutString multiply definedComment: ST7735_OutString unused
2 symbols
347 symbols in table
